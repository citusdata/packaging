name: Build package for test images

env:
  GH_TOKEN: "${{ secrets.GH_TOKEN }}"
  PACKAGING_SECRET_KEY: "${{ secrets.PACKAGING_SECRET_KEY }}"
  PACKAGE_ENCRYPTION_KEY: "${{ secrets.PACKAGE_ENCRYPTION_KEY }}"
  PACKAGING_PASSPHRASE: "${{ secrets.PACKAGING_PASSPHRASE }}"
  DOCKERHUB_PASSWORD: "${{ secrets.DOCKERHUB_PASSWORD }}"
  DOCKERHUB_USER_NAME: "${{ secrets.DOCKERHUB_USER_NAME }}"
  ACR_PASSWORD: "${{ secrets.ACR_PASSWORD }}"
  ACR_SERVICE_PRINCIPAL_ID: "${{ secrets.ACR_SERVICE_PRINCIPAL_ID }}"
  CURRENT_BRANCH: ${GITHUB_REF##*/}
  TEST: true
on:
  pull_request:
    types: [opened, reopened,synchronize]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_docker_files_integrity:
    name: Check if docker files are compliant with templates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Update and check dockerfiles
        run: |
          ./update_dockerfiles
          git add --intent-to-add dockerfiles
          git diff --exit-code dockerfiles

  build_package:
    name: Build package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # TARGET_PLATFORM:
        #   - centos-7
        #   - oraclelinux-8
        #   - oraclelinux-7
        #   - almalinux-8
        #   - almalinux-9
        # POSTGRES_VERSION:
        #   - pg11
        #   - pg12
        #   - pg13
        #   - pg14
        #   - pg15
        #   - pg16
        # exclude:
        #   - TARGET_PLATFORM: centos-7
        #     POSTGRES_VERSION: pg16
        #   - TARGET_PLATFORM: oraclelinux-7
        #     POSTGRES_VERSION: pg16
        include:
          # - TARGET_PLATFORM: debian-buster
          #   POSTGRES_VERSION: all
          # - TARGET_PLATFORM: debian-bullseye
          #   POSTGRES_VERSION: all
          # - TARGET_PLATFORM: debian-bookworm
          #   POSTGRES_VERSION: all
          # - TARGET_PLATFORM: ubuntu-bionic
          #   POSTGRES_VERSION: all
          # - TARGET_PLATFORM: ubuntu-focal
          #   POSTGRES_VERSION: all
          - TARGET_PLATFORM: ubuntu-jammy
            POSTGRES_VERSION: all
          # - TARGET_PLATFORM: ubuntu-kinetic
          #   POSTGRES_VERSION: all
          # - TARGET_PLATFORM: pgxn
          #   POSTGRES_VERSION: all
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: dockerfiles/${{ matrix.TARGET_PLATFORM }}-${{ matrix.POSTGRES_VERSION }}/Dockerfile
          pull: true
          push: true
          tags: ghcr.io/citusdata/packaging-test:${{ matrix.TARGET_PLATFORM }}-${{ matrix.POSTGRES_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Clone tools repo for test
      #   run: git clone -b v0.8.27 --depth=1  https://github.com/citusdata/tools.git tools

      # - name: Execute packaging tests
      #   run: |
      #     python -m pip install -r tools/packaging_automation/requirements.txt
      #     python -m pytest -q tools/packaging_automation/tests/test_citus_package.py -k 'test_build_packages'
      #   env:
      #     PACKAGING_IMAGE_PLATFORM: "${{matrix.TARGET_PLATFORM}}"
