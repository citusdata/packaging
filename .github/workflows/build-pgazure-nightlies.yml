name: Build and publish pgazure nightly packages

env:
  MAIN_BRANCH: "develop"
  PACKAGE_CLOUD_REPO_NAME: "citusdata/enterprise-nightlies"
  PACKAGE_CLOUD_API_TOKEN: ${{ secrets.PACKAGE_CLOUD_API_TOKEN }}
  PACKAGING_PASSPHRASE: ${{ secrets.PGAZ_PACKAGE_PASSPHRASE }}
  PACKAGING_SECRET_KEY: ${{ secrets.PGAZ_PACKAGE_SECRET_KEY }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  DOCKERHUB_USER_NAME: ${{ secrets.DOCKERHUB_USER_NAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  MSRUSTUP_PAT: ${{ secrets.MSRUSTUP_PAT }}
  CRATES_IO_MIRROR_FEED_TOKEN: ${{ secrets.CRATES_IO_MIRROR_FEED_TOKEN }}
on:
  push:
    branches:
      - "**"
  schedule:
    - cron: "30 1 * * *"
  workflow_dispatch:

jobs:
  build_package:
    name: Build package
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - el/7
          - debian/buster
          - debian/bullseye
          - ubuntu/focal
          - ubuntu/jammy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # This step is to fetch the images unanonymously to have higher bandwidth
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Clone tools branch
        run: git clone -b v0.8.28 --depth=1  https://github.com/citusdata/tools.git tools

      - name: Install package dependencies
        run: sudo apt-get update -y && sudo apt-get install -y libcurl4-openssl-dev libssl-dev python3-testresources

      - name: Install python requirements
        run: python -m pip install -r tools/packaging_automation/requirements.txt

      - name: Build packages
        run: |
          python -m  tools.packaging_automation.citus_package \
          --gh_token "${GH_TOKEN}" \
          --platform "${{ matrix.platform }}" \
          --build_type "nightly" \
          --secret_key "${PACKAGING_SECRET_KEY}" \
          --passphrase "${PACKAGING_PASSPHRASE}" \
          --output_dir "$(pwd)/packages/" \
          --input_files_dir "$(pwd)"

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: |
            packages

      - name: Publish packages
        run: |
          python -m  tools.packaging_automation.upload_to_package_cloud \
          --platform "${{ matrix.platform }}" \
          --package_cloud_api_token "${PACKAGE_CLOUD_API_TOKEN}" \
          --repository_name "${PACKAGE_CLOUD_REPO_NAME}" \
          --output_file_path "$(pwd)/packages" \
          --current_branch "${GITHUB_REF##*/}" \
          --main_branch "${MAIN_BRANCH}"
