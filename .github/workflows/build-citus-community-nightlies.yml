name: Build and publish citus nightly packages

env:
  MAIN_BRANCH: "all-citus"
  PACKAGE_CLOUD_REPO_NAME: "citusdata/community-nightlies"
  PACKAGE_CLOUD_API_TOKEN: ${{ secrets.PACKAGE_CLOUD_API_TOKEN }}
  PACKAGING_PASSPHRASE: ${{ secrets.PACKAGING_PASSPHRASE }}
  PACKAGING_SECRET_KEY: ${{ secrets.PACKAGING_SECRET_KEY }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
on:
  push:
    branches:
      - "**"
  schedule:
    - cron: "30 1 * * *"
  workflow_dispatch:

jobs:
  build_package:
    name: Build package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - el/7
          - el/8
          - ol/7
          - debian/stretch
          - debian/buster
          - ubuntu/bionic
          - ubuntu/focal

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Clone tools branch
        run: git clone -b v0.8.2 --depth=1  https://github.com/citusdata/tools.git tools

      - name: Clone build branch
        run: git clone -b "${MAIN_BRANCH}" --depth=1  https://github.com/citusdata/packaging.git packaging

      - name: Install package dependencies
        run: sudo apt-get update && sudo apt-get install libcurl4-openssl-dev libssl-dev python3-testresources

      - name: Install python requirements
        run: python -m pip install -r tools/packaging_automation/requirements.txt

      - name: Build packages
        run: |
          python -m  tools.packaging_automation.citus_package \
          --gh_token "${GH_TOKEN}" \
          --platform "${{ matrix.platform }}" \
          --build_type "nightly" \
          --secret_key "${PACKAGING_SECRET_KEY}" \
          --passphrase "${PACKAGING_PASSPHRASE}" \
          --output_dir "$(pwd)/packages/" \
          --input_files_dir "$(pwd)/packaging" \
          --output_validation

      - name: Publish packages
        run: |
          python -m  tools.packaging_automation.upload_to_package_cloud \
          --platform "${{ matrix.platform }}" \
          --package_cloud_api_token "${PACKAGE_CLOUD_API_TOKEN}" \
          --repository_name "${PACKAGE_CLOUD_REPO_NAME}" \
          --output_file_path "$(pwd)/packages" \
          --current_branch "${GITHUB_REF##*/}" \
          --main_branch "${MAIN_BRANCH}"
